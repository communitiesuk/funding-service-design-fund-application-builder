"""Migrate condition into table

Revision ID: 9c948b9f4833
Revises: 60c0a648f835
Create Date: 2025-06-27 14:59:04.688278

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "9c948b9f4833"
down_revision = "60c0a648f835"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "condition",
        sa.Column("condition_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=True),
        sa.Column("value", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("form_id", sa.UUID(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["form_id"], ["form.form_id"], name=op.f("fk_condition_form_id_form")),
        sa.PrimaryKeyConstraint("condition_id", name=op.f("pk_condition")),
    )
    op.create_table(
        "page_condition",
        sa.Column("page_condition_id", sa.UUID(), nullable=False),
        sa.Column("condition_id", sa.UUID(), nullable=False),
        sa.Column("page_id", sa.UUID(), nullable=False),
        sa.Column("destination_page_path", sa.String(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["condition_id"], ["condition.condition_id"], name=op.f("fk_page_condition_condition_id_condition")
        ),
        sa.ForeignKeyConstraint(["page_id"], ["page.page_id"], name=op.f("fk_page_condition_page_id_page")),
        sa.PrimaryKeyConstraint("page_condition_id", name=op.f("pk_page_condition")),
    )
    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "section_base_path",
            existing_type=sa.INTEGER(),
            server_default=sa.text("nextval('section_base_path_seq')"),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "section_base_path",
            existing_type=sa.INTEGER(),
            server_default=sa.text("nextval('section_base_path_seq'::regclass)"),
            existing_nullable=True,
        )

    op.drop_table("page_condition")
    op.drop_table("condition")
    # ### end Alembic commands ###
