name: Deploy to AWS
run-name: ${{ github.event_name == 'workflow_dispatch' && format('Deploy to {0}', github.event.inputs.environment) || (github.ref == 'refs/heads/main' && 'Deploy to Test-UAT' || 'Build & Unit Test') }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Which AWS Account to use
        type: choice
        required: true
        options:
          - dev
          - test
          - uat
      run_e2e_tests:
        required: false
        default: true
        type: boolean
        description: Run e2e tests after deployment
  push:

jobs:
  setup:
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/determine-jobs.yml@main
    with:
      environment: ${{ inputs.environment }}

  unit_tests:
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/pre-deploy.yml@main
    with:
      postgres_unit_testing: true
      db_name: fab_store_test

  paketo_build:
    needs: [ setup ]
    permissions:
      packages: write
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/package.yml@main
    with:
      version_to_build: sha-${{ github.sha }}
      owner: ${{ github.repository_owner }}
      application: funding-service-design-fund-application-builder
      assets_required: true

  dev_deploy:
    needs: [ unit_tests, paketo_build, setup ]
    if: ${{ contains(fromJSON(needs.setup.outputs.jobs_to_run), 'dev') }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: dev
      app_name: fund-application-builder
      run_db_migrations: true
      image_location: ${{ needs.paketo_build.outputs.image_location }}
      notify_slack: false

  dev_e2e_test:
    # Do not run these against the prod environment without addressing the auth/JWT self-signing done by e2e tests.
    if: ${{ contains(fromJSON(needs.setup.outputs.jobs_to_run), 'dev') && (github.event_name == 'push' || inputs.run_e2e_tests == true) }}
    name: Run E2E Dev
    needs: [ dev_deploy ]
    uses: ./.github/workflows/test_e2e_aws.yml
    with:
      environment: 'dev'
    secrets: inherit # pragma: allowlist secret

  test_deploy:
    needs: [ paketo_build, setup ]
    if: ${{ always() && contains(fromJSON(needs.setup.outputs.jobs_to_run), 'test') && (! contains(needs.*.result, 'failure') ) && (! contains(needs.*.result, 'cancelled') )}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.SLACK_NOTIFICATION_CHANNEL_ID }}
    with:
      environment: test
      app_name: fund-application-builder
      run_db_migrations: true
      image_location: ${{ needs.paketo_build.outputs.image_location }}
      notify_slack: true

  test_e2e_test:
    # Do not run these against the prod environment without addressing the auth/JWT self-signing done by e2e tests.
    if: ${{ contains(fromJSON(needs.setup.outputs.jobs_to_run), 'test') && (github.event_name == 'push' || inputs.run_e2e_tests == true) }}
    name: Run E2E Test
    needs: [ test_deploy ]
    uses: ./.github/workflows/test_e2e_aws.yml
    with:
      environment: 'test'
    secrets: inherit # pragma: allowlist secret

  uat_deploy:
    needs: [ test_e2e_test, test_deploy, paketo_build, setup ]
    if: ${{ always() && contains(fromJSON(needs.setup.outputs.jobs_to_run), 'uat') && (! contains(needs.*.result, 'failure') ) && (! contains(needs.*.result, 'cancelled') )}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@main
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.SLACK_NOTIFICATION_CHANNEL_ID }}
      SLACK_DEPLOYMENTS_CHANNEL_ID: ${{ secrets.SLACK_DEPLOYMENTS_CHANNEL_ID }}
    with:
      environment: uat
      app_name: fund-application-builder
      run_db_migrations: true
      image_location: ${{ needs.paketo_build.outputs.image_location }}
      notify_slack: true
      notify_slack_on_deployment: true
