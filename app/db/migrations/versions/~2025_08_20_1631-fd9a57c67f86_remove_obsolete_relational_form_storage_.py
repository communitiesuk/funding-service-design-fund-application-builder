"""Remove obsolete relational form storage models

Revision ID: fd9a57c67f86
Revises: 0cec5f1e34b8
Create Date: 2025-08-20 16:31:12.556135

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "fd9a57c67f86"
down_revision = "0cec5f1e34b8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables in correct order to handle foreign key dependencies
    op.drop_table("component")
    op.drop_table("page_condition")
    with op.batch_alter_table("page", schema=None) as batch_op:
        batch_op.drop_index("ix_template_page_name", postgresql_where="(is_template = true)")
    op.drop_table("page")
    op.drop_table("condition")
    op.drop_table("theme")
    op.drop_table("subcriteria")
    op.drop_table("criteria")
    op.drop_table("lizt")
    op.drop_table("form_section")
    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "section_base_path",
            existing_type=sa.INTEGER(),
            server_default=sa.text("nextval('section_base_path_seq')"),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "section_base_path",
            existing_type=sa.INTEGER(),
            server_default=sa.text("nextval('section_base_path_seq'::regclass)"),
            existing_nullable=True,
        )

    op.create_table(
        "form_section",
        sa.Column("form_section_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("hide_title", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("form_section_id", name="pk_form_section"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "component",
        sa.Column("component_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("page_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("theme_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("hint_text", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("options", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column(
            "type",
            postgresql.ENUM(
                "TEXT_FIELD",
                "FREE_TEXT_FIELD",
                "EMAIL_ADDRESS_FIELD",
                "UK_ADDRESS_FIELD",
                "HTML",
                "YES_NO_FIELD",
                "RADIOS_FIELD",
                "PARA",
                "DATE_PARTS_FIELD",
                "CHECKBOXES_FIELD",
                "CLIENT_SIDE_FILE_UPLOAD_FIELD",
                "WEBSITE_FIELD",
                "TELEPHONE_NUMBER_FIELD",
                "MULTILINE_TEXT_FIELD",
                "NUMBER_FIELD",
                "DATE_FIELD",
                "DATE_TIME_FIELD",
                "DATE_TIME_PARTS_FIELD",
                "SELECT_FIELD",
                "INSET_TEXT_FIELD",
                "DETAILS_FIELD",
                "LIST_FIELD",
                "AUTO_COMPLETE_FIELD",
                "FILE_UPLOAD_FIELD",
                "MONTH_YEAR_FIELD",
                "TIME_FIELD",
                "MULTI_INPUT_FIELD",
                name="componenttype",
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("audit_info", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("page_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("theme_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("source_template_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("runner_component_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("list_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("template_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("content", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("schema", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("parent_component_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["list_id"], ["lizt.list_id"], name="fk_component_list_id_lizt"),
        sa.ForeignKeyConstraint(["page_id"], ["page.page_id"], name="fk_component_page_id_page"),
        sa.ForeignKeyConstraint(
            ["parent_component_id"], ["component.component_id"], name="fk_component_parent_component_id_component"
        ),
        sa.ForeignKeyConstraint(["theme_id"], ["theme.theme_id"], name="fk_component_theme_id_theme"),
        sa.PrimaryKeyConstraint("component_id", name="pk_component"),
    )
    op.create_table(
        "condition",
        sa.Column("condition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("display_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("value", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["form_id"], ["form.form_id"], name="fk_condition_form_id_form"),
        sa.PrimaryKeyConstraint("condition_id", name="pk_condition"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "page_condition",
        sa.Column("page_condition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("condition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("page_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("destination_page_path", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["condition_id"], ["condition.condition_id"], name="fk_page_condition_condition_id_condition"
        ),
        sa.ForeignKeyConstraint(["page_id"], ["page.page_id"], name="fk_page_condition_page_id_page"),
        sa.PrimaryKeyConstraint("page_condition_id", name="pk_page_condition"),
    )
    op.create_table(
        "subcriteria",
        sa.Column("subcriteria_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("criteria_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("template_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("audit_info", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("criteria_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("source_template_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["criteria_id"], ["criteria.criteria_id"], name="fk_subcriteria_criteria_id_criteria"),
        sa.PrimaryKeyConstraint("subcriteria_id", name="pk_subcriteria"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "criteria",
        sa.Column("criteria_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("round_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("weighting", sa.REAL(), autoincrement=False, nullable=True),
        sa.Column("Template Name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("audit_info", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("source_template_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["round_id"], ["round.round_id"], name="fk_criteria_round_id_round"),
        sa.PrimaryKeyConstraint("criteria_id", name="pk_criteria"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "page",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("page_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name_in_apply_json", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("audit_info", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("form_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("display_path", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_template_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("template_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("controller", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("default_next_page_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("options", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("form_section_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["default_next_page_id"], ["page.page_id"], name="fk_page_default_next_page_id_page"),
        sa.ForeignKeyConstraint(["form_id"], ["form.form_id"], name="fk_page_form_id_form"),
        sa.ForeignKeyConstraint(
            ["form_section_id"], ["form_section.form_section_id"], name="fk_page_form_section_id_form_section"
        ),
        sa.PrimaryKeyConstraint("page_id", name="pk_page"),
    )
    with op.batch_alter_table("page", schema=None) as batch_op:
        batch_op.create_index(
            "ix_template_page_name", ["display_path", "form_id"], unique=True, postgresql_where="(is_template = true)"
        )

    op.create_table(
        "theme",
        sa.Column("theme_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("subcriteria_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("Template Name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("audit_info", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("subcriteria_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("source_template_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["subcriteria_id"], ["subcriteria.subcriteria_id"], name="fk_theme_subcriteria_id_subcriteria"
        ),
        sa.PrimaryKeyConstraint("theme_id", name="pk_theme"),
    )
    op.create_table(
        "lizt",
        sa.Column("list_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("items", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("list_id", name="pk_lizt"),
    )
    # ### end Alembic commands ###
