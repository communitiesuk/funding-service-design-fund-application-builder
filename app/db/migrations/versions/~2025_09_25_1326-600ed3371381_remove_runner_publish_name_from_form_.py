"""Remove runner_publish_name from form table

Revision ID: 600ed3371381
Revises: aeb09e21498b
Create Date: 2025-09-25 13:26:30.394794

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "600ed3371381"
down_revision = "aeb09e21498b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Data migration included here (deviation from schema-only policy):
    # We're dropping the runner_publish_name column and need to preserve its data by transferring it to url_path. This
    # violates our usual schema-only rule but is justified because:
    # 1. Data would be lost if we drop the column without transfer
    # 2. The schema change and data transfer must be atomic
    # 3. Splitting into separate migrations would complicate deployment
    connection = op.get_bind()
    connection.execute(
        sa.text("""
            UPDATE form
            SET url_path = runner_publish_name
            WHERE url_path IS NULL
                AND runner_publish_name IS NOT NULL
        """)
    )

    with op.batch_alter_table("form", schema=None) as batch_op:
        batch_op.drop_column("runner_publish_name")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table("form", schema=None) as batch_op:
        batch_op.add_column(sa.Column("runner_publish_name", sa.VARCHAR(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
